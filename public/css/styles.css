/* villan@7667 */
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap");

:root {
  /* Color Variables */
  --primary: #6366f1;
  --primary-hover: #4f46e5;
  --primary-light: rgba(99, 102, 241, 0.1);
  --secondary: #a855f7;
  --secondary-hover: #9333ea;
  --success: #009a39;
  --success-hover: #16a34a;
  --success-light: rgba(34, 197, 94, 0.1);
  --danger: #ef4444;
  --danger-hover: #dc2626;
  --danger-light: rgba(239, 68, 68, 0.1);
  --warning: #f59e0b;
  --warning-hover: #d97706;
  --text-dark: #1e293b;
  --text-muted: #64748b;
  --text-light: #94a3b8;
  --bg-light: #f8fafc;
  --bg-white: #ffffff;
  --border-light: #e2e8f0;

  /* Priority Colors */
  --priority-low: #22c55e;
  --priority-high: #f59e0b;
  --priority-urgent: #ef4444;

  /* Spacing & Sizing */
  --border-radius-sm: 0.375rem;
  --border-radius: 0.5rem;
  --border-radius-lg: 0.75rem;
  --border-radius-xl: 1rem;

  /* Shadows */
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --shadow-md: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-lg: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);

  /* Transitions */
  --transition-fast: 150ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition: 200ms cubic-bezier(0.4, 0, 0.2, 1);
  --transition-slow: 300ms cubic-bezier(0.4, 0, 0.2, 1);
}

/* Reset & Base Styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Poppins", sans-serif;
  background: linear-gradient(-45deg, #6366f1, #a855f7, #ec4899, #8b5cf6);
  background-size: 400% 400%;
  animation: gradientBg 15s ease infinite;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1.5rem;
  color: var(--text-dark);
}

@keyframes gradientBg {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.container {
  width: 100%;
  max-width: 600px;
}

/* Main Todo Box */
.todo-box {
  background: var(--bg-white);
  border-radius: var(--border-radius-xl);
  padding: 2rem;
  box-shadow: var(--shadow-lg);
  animation: slideUp 0.6s ease-in-out;
  display: flex;
  flex-direction: column;
  max-height: 85vh;
  overflow: hidden;
  position: relative;
  backdrop-filter: blur(10px);
  background-color: rgba(255, 255, 255, 0.9);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

@keyframes slideUp {
  from {
    transform: translateY(60px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* App Header */
.app-header {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  margin-bottom: 1.5rem;
}

.app-header i {
  font-size: 1.75rem;
  color: var(--primary);
}

.app-header h1 {
  font-size: 1.75rem;
  font-weight: 700;
  color: var(--text-dark);
  margin: 0;
}

/* Alert Messages */
.alert {
  padding: 1rem;
  border-radius: var(--border-radius);
  margin-bottom: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  animation: fadeIn 0.3s ease;
}

.alert-success {
  background-color: var(--success-light);
  color: var(--success);
  border-left: 4px solid var(--success);
}

.alert-error {
  background-color: var(--danger-light);
  color: var(--danger);
  border-left: 4px solid var(--danger);
}

.close-alert {
  background: transparent;
  border: none;
  color: inherit;
  cursor: pointer;
  font-size: 1rem;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Input Section */
.input-section {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.input-group {
  display: flex;
  gap: 0.75rem;
}

.input-section input {
  flex: 1;
  padding: 0.875rem 1.25rem;
  border: 1px solid var(--border-light);
  border-radius: var(--border-radius);
  background: var(--bg-light);
  font-size: 1rem;
  outline: none;
  transition: var(--transition);
  font-family: "Poppins", sans-serif;
}

.input-section input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
}

.priority-select {
  padding: 0.875rem 1.25rem;
  border: 1px solid var(--border-light);
  border-radius: var(--border-radius);
  background: var(--bg-light);
  font-size: 1rem;
  outline: none;
  transition: var(--transition);
  cursor: pointer;
  font-family: "Poppins", sans-serif;
  min-width: 140px;
}

.priority-select:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
}

.add-btn {
  background: linear-gradient(to right, var(--primary), var(--secondary));
  color: white;
  border: none;
  padding: 0.875rem 1.5rem;
  font-size: 1rem;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: var(--transition);
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  font-weight: 500;
  font-family: "Poppins", sans-serif;
}

.add-btn:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.add-btn:active {
  transform: translateY(0);
}

/* Tasks Container */
.tasks-container {
  overflow-y: auto;
  flex-grow: 1;
  max-height: calc(85vh - 250px);
  margin-bottom: 1rem;
  padding-right: 0.5rem;
}

.tasks-container::-webkit-scrollbar {
  width: 6px;
}

.tasks-container::-webkit-scrollbar-thumb {
  background-color: var(--primary);
  border-radius: 10px;
}

.tasks-container::-webkit-scrollbar-track {
  background-color: var(--bg-light);
  border-radius: 10px;
}

/* Tasks List */
.tasks-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

/* Task Item */
.task-item {
  background: var(--bg-white);
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-sm);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  overflow: hidden;
  border: 1px solid var(--border-light);
  transform: translateX(0);
  opacity: 1;
}

.task-item:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

/* Task rearrangement animations */
.task-item.moving {
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.task-content {
  display: flex;
  align-items: center;
  padding: 1rem;
  gap: 0.75rem;
}

.task-title {
  flex: 1;
  font-size: 1rem;
  color: var(--text-dark);
  word-break: break-word;
  transition: var(--transition);
}

.completed-text {
  text-decoration: line-through;
  color: var(--text-muted);
}

.task-actions {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

/* Priority Badge */
.priority-badge {
  font-size: 0.75rem;
  font-weight: 500;
  padding: 0.25rem 0.75rem;
  color: white;
}

.priority-low {
  background-color: var(--priority-low);
}

.priority-high {
  background-color: var(--priority-high);
}

.priority-urgent {
  background-color: var(--priority-urgent);
}

/* Completed Task Styling */
.task-item.completed .task-content {
  background-color: var(--success);
  color: white;
}

.task-item.completed .task-title {
  color: white;
  text-decoration: line-through;
}

.task-item.completed .edit-btn,
.task-item.completed .delete-btn {
  color: rgba(255, 255, 255, 0.8);
}

.task-item.completed .edit-btn:hover {
  background-color: rgba(255, 255, 255, 0.2);
  color: white;
}

.task-item.completed .delete-btn:hover {
  background-color: rgba(255, 255, 255, 0.2);
  color: white;
}

/* Edit & Delete Buttons */
.edit-btn,
.delete-btn {
  background: transparent;
  border: none;
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: var(--transition);
  color: var(--text-muted);
}

.edit-btn:hover {
  background-color: var(--primary-light);
  color: var(--primary);
}

.delete-btn:hover {
  background-color: var(--danger-light);
  color: var(--danger);
}

.delete-form {
  margin: 0;
}

/* Edit Form */
.edit-form {
  display: none;
  padding: 1rem;
  background-color: var(--bg-light);
  animation: fadeIn 0.3s ease;
}

.edit-form.active {
  display: block;
}

.edit-input {
  width: 100%;
  padding: 0.75rem 1rem;
  border: 1px solid var(--border-light);
  border-radius: var(--border-radius);
  font-size: 0.875rem;
  margin-bottom: 0.75rem;
  outline: none;
  transition: var(--transition);
  font-family: "Poppins", sans-serif;
}

.edit-input:focus {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px rgba(99, 102, 241, 0.2);
}

.edit-actions {
  display: flex;
  gap: 0.5rem;
  margin-top: 0.75rem;
}

.update-btn,
.cancel-btn {
  padding: 0.625rem 1rem;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  font-size: 0.875rem;
  transition: var(--transition);
  display: flex;
  align-items: center;
  gap: 0.375rem;
  font-weight: 500;
  font-family: "Poppins", sans-serif;
}

.update-btn {
  background-color: var(--success);
  color: white;
  flex: 1;
}

.update-btn:hover {
  background-color: var(--success-hover);
}

.cancel-btn {
  background-color: var(--bg-light);
  color: var(--text-dark);
  border: 1px solid var(--border-light);
}

.cancel-btn:hover {
  background-color: #e5e7eb;
}

/* Empty State */
.empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 3rem 1.5rem;
  color: var(--text-muted);
  text-align: center;
  background-color: var(--bg-light);
  border-radius: var(--border-radius);
}

.empty-state i {
  font-size: 3rem;
  margin-bottom: 1rem;
  color: #cbd5e1;
}

/* Task Counter */
.task-counter {
  text-align: center;
  padding: 1rem 0 0;
  color: var(--text-muted);
  font-size: 0.875rem;
  border-top: 1px solid var(--border-light);
}

.task-counter .separator {
  margin: 0 0.5rem;
  color: var(--text-light);
}

.task-counter .completed-count {
  color: var(--success);
  font-weight: 500;
}

.task-counter .total-count {
  color: var(--text-muted);
}

/* Checkbox Styling */
.checkbox-container {
  position: relative;
  padding-left: 1.75rem;
  cursor: pointer;
  user-select: none;
  min-width: 1.75rem;
  height: 1.75rem;
  display: flex;
  align-items: center;
}

.checkbox-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

.checkmark {
  position: absolute;
  top: 0;
  left: 0;
  height: 1.25rem;
  width: 1.25rem;
  background-color: var(--bg-light);
  border: 2px solid var(--border-light);
  border-radius: var(--border-radius-sm);
  transition: all 0.2s ease;
}

.checkbox-container:hover input ~ .checkmark {
  border-color: var(--primary);
}

.checkbox-container input:checked ~ .checkmark {
  background-color: var(--primary);
  border-color: var(--primary);
}

.task-item.completed .checkbox-container input:checked ~ .checkmark {
  background-color: white;
  border-color: white;
}

.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

.checkbox-container input:checked ~ .checkmark:after {
  display: block;
}

.checkbox-container .checkmark:after {
  left: 0.375rem;
  top: 0.125rem;
  width: 0.25rem;
  height: 0.625rem;
  border: solid white;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

.task-item.completed .checkbox-container .checkmark:after {
  border-color: var(--success);
}

/* Task Completed Animation */
.task-item.completed {
  animation: completeTask 0.5s ease forwards;
}

@keyframes completeTask {
  0% {
    background-color: transparent;
  }
  50% {
    background-color: rgba(34, 197, 94, 0.1);
  }
  100% {
    background-color: transparent;
  }
}

/* Completed tasks section styling */
.tasks-list .task-item.completed {
  margin-top: 0.5rem;
  border-top: 2px solid var(--success);
}

.tasks-list .task-item.completed:first-of-type {
  margin-top: 1.5rem;
  position: relative;
}

.tasks-list .task-item.completed:first-of-type::before {
  content: "Completed Tasks";
  position: absolute;
  top: -1.5rem;
  left: 0;
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--success);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Incomplete tasks section styling */
.tasks-list .task-item:not(.completed):first-of-type {
  position: relative;
}

.tasks-list .task-item:not(.completed):first-of-type::before {
  content: "To Do";
  position: absolute;
  top: -1.5rem;
  left: 0;
  font-size: 0.875rem;
  font-weight: 500;
  color: var(--text-muted);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

/* Hide section headers when there are no tasks in that section */
.tasks-list:not(:has(.task-item:not(.completed))) .task-item.completed:first-of-type::before {
  display: none;
}

.tasks-list:not(:has(.task-item.completed)) .task-item:not(.completed):first-of-type::before {
  margin-bottom: 0;
}

/* Responsive Design */
@media (max-width: 768px) {
  .todo-box {
    padding: 1.5rem;
  }

  .input-group {
    flex-direction: column;
  }

  .priority-select {
    width: 100%;
  }

  .edit-actions {
    flex-direction: column;
  }

  .update-btn,
  .cancel-btn {
    width: 100%;
    justify-content: center;
  }
}

@media (max-width: 480px) {
  .todo-box {
    padding: 1.25rem;
  }

  .app-header h1 {
    font-size: 1.5rem;
  }

  .task-content {
    padding: 0.75rem;
  }

  .task-title {
    font-size: 0.875rem;
  }

  .edit-btn,
  .delete-btn {
    width: 1.75rem;
    height: 1.75rem;
  }
}
